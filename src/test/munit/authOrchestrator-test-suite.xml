<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit"
	xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
	<munit:config name="authOrchestrator-test-suite.xml" >
		<munit:parameterizations >
			<munit:parameterization name="env" >
				<munit:parameters >
					<munit:parameter propertyName="env" value="${env}" />
				</munit:parameters>
			</munit:parameterization>
			<munit:parameterization name="secure.properties.key" >
				<munit:parameters >
					<munit:parameter propertyName="secure.properties.key" value="${secure.properties.key}" />
				</munit:parameters>
			</munit:parameterization>
		</munit:parameterizations>
	</munit:config>
	<munit:test
		name="authOrchestrator-test-suite-authOrchestratorSub_FlowTest-michelin-fr"
		doc:id="90d75924-eea3-4eab-94ed-f4d323b0270f" description="Test">
		<munit:behavior>
			<ee:transform doc:name="Response Auth Client"
				doc:id="f421bd5b-47c0-49e9-9477-5069e48f1b6b">
				<ee:message>
					<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
readUrl('classpath://api/examples/post-api_auth-response.json', 'application/json')]]></ee:set-payload>
				</ee:message>
			</ee:transform>
			<munit-tools:mock-when
				doc:name="Mock To Auth Client"
				doc:id="aa368732-8d59-4791-a741-46b2ffa0cb2a"
				processor="http:request">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute
						whereValue="POST" attributeName="method" />
					<munit-tools:with-attribute
						whereValue="POST /auth/token" attributeName="doc:name" />
					<munit-tools:with-attribute
						whereValue="940581c6-2817-4cf8-858a-701edb34f85f"
						attributeName="doc:id" />
					<munit-tools:with-attribute
						whereValue="HTTP_Request_Process_Auth_configuration"
						attributeName="config-ref" />
					<munit-tools:with-attribute
						whereValue="/auth/token" attributeName="path" />
				</munit-tools:with-attributes>
				<munit-tools:then-return>
					<munit-tools:payload value="#[payload]"
						mediaType="application/json" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution>
			<ee:transform doc:name="Set Payload"
				doc:id="c246b0eb-29d0-441c-8954-c5a124943183">
				<ee:message>
					<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
readUrl('classpath://api/examples/post-api_auth-request.json', 'application/json')]]></ee:set-payload>
				</ee:message>
			</ee:transform>
			<flow-ref doc:name="Call to Auth Orchestrator Sub_Flow"
				doc:id="3e0f6ff5-3acd-412f-b61c-56026e610bf2"
				name="authOrchestratorSub_Flow" />
		</munit:execution>
		<munit:validation>
			<munit-tools:assert-that
				doc:name="Validate Payload"
				doc:id="aef5823c-b09e-422a-b49b-c2355be1da22"
				is="#[%dw 2.0&#10;output application/json&#10;var expect = readUrl('classpath://api/examples/post-api_auth-response.json', 'application/json')&#10;---&#10;MunitTools::equalTo(expect)]"
				expression="#[payload]" />
		</munit:validation>
	</munit:test>
	<munit:test
		name="authOrchestrator-test-suite-authOrchestratorSub_FlowTest-michelin-es"
		doc:id="173e4774-80fa-4b7e-bb3f-e61f6e0e911f" description="Test">
		<munit:behavior>
			<ee:transform doc:name="Response Auth Client"
				doc:id="b38cd5dc-3414-4edf-9ac5-d99ab29a5df4">
				<ee:message>
					<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
readUrl('classpath://api/examples/post-api_auth-response.json', 'application/json')]]></ee:set-payload>
				</ee:message>
			</ee:transform>
			<munit-tools:mock-when
				doc:name="Mock To Auth Client"
				doc:id="92c962e0-d8b9-4010-bbd3-19a26cae224a"
				processor="http:request">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute
						whereValue="POST" attributeName="method" />
					<munit-tools:with-attribute
						whereValue="POST /auth/token" attributeName="doc:name" />
					<munit-tools:with-attribute
						whereValue="940581c6-2817-4cf8-858a-701edb34f85f"
						attributeName="doc:id" />
					<munit-tools:with-attribute
						whereValue="HTTP_Request_Process_Auth_configuration"
						attributeName="config-ref" />
					<munit-tools:with-attribute
						whereValue="/auth/token" attributeName="path" />
				</munit-tools:with-attributes>
				<munit-tools:then-return>
					<munit-tools:payload value="#[payload]"
						mediaType="application/json" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution>
			<ee:transform doc:name="Set Payload"
				doc:id="10ed157c-ecfc-4959-a69d-6f889f4503ce">
				<ee:message>
					<ee:set-payload><![CDATA[%dw 2.0
import * from dw::util::Values
output application/json
---
readUrl('classpath://api/examples/post-api_auth-request.json', 'application/json') update  "tenantId" with "michelin_es"]]></ee:set-payload>
				</ee:message>
			</ee:transform>
			<flow-ref doc:name="Call to Auth Orchestrator Sub_Flow"
				doc:id="9b607c3f-09a0-4a59-86e1-8967ea9f27ca"
				name="authOrchestratorSub_Flow" />
		</munit:execution>
		<munit:validation>
			<munit-tools:assert-that
				doc:name="Validate Payload"
				doc:id="16bb44b0-e7ac-4659-b722-9ba0b534a000"
				is="#[%dw 2.0&#10;output application/json&#10;var expect = readUrl('classpath://api/examples/post-api_auth-response.json', 'application/json')&#10;---&#10;MunitTools::equalTo(expect)]"
				expression="#[payload]" />
		</munit:validation>
	</munit:test>
	<munit:test
		name="authOrchestrator-test-suite-authOrchestratorSub_FlowTes-bad-tenant-id"
		doc:id="2a842ede-3b1f-4cc7-a9d6-b1e171106fc7" description="Test"
		expectedErrorType="APP:UNAUTHORIZED">
		<munit:execution>
			<ee:transform doc:name="Set Payload"
				doc:id="c9811dc8-4d6c-4505-8d4b-14999db4f472">
				<ee:message>
					<ee:set-payload><![CDATA[%dw 2.0
output application/json
import * from dw::util::Values
---
readUrl('classpath://api/examples/post-api_auth-request.json', 'application/json') update  "bpId" with "00077107332"]]></ee:set-payload>
				</ee:message>
			</ee:transform>
			<flow-ref doc:name="Call to Auth Orchestrator Sub_Flow"
				doc:id="d322f045-7a32-4e99-86de-4ff3912ec253"
				name="authOrchestratorSub_Flow" />
		</munit:execution>
	</munit:test>
	<munit:test
		name="authOrchestrator-test-suite-authOrchestratorSub_FlowTest-png_ge"
		doc:id="f9b5c84d-a09b-4fe9-9a14-ce14a8dfdabd" description="Test">
		<munit:behavior>
			<ee:transform doc:name="Response Auth Client"
				doc:id="5cd6b5fb-9071-4e57-ad46-5403d1db46ae">
				<ee:message>
					<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
readUrl('classpath://api/examples/post-api_auth-response.json', 'application/json')]]></ee:set-payload>
				</ee:message>
			</ee:transform>
			<munit-tools:mock-when
				doc:name="Mock To Auth Client"
				doc:id="5424e8c8-0436-41a5-a364-1c28571389ac"
				processor="http:request">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute
						whereValue="POST" attributeName="method" />
					<munit-tools:with-attribute
						whereValue="POST /auth/token" attributeName="doc:name" />
					<munit-tools:with-attribute
						whereValue="940581c6-2817-4cf8-858a-701edb34f85f"
						attributeName="doc:id" />
					<munit-tools:with-attribute
						whereValue="HTTP_Request_Process_Auth_configuration"
						attributeName="config-ref" />
					<munit-tools:with-attribute
						whereValue="/auth/token" attributeName="path" />
				</munit-tools:with-attributes>
				<munit-tools:then-return>
					<munit-tools:payload value="#[payload]"
						mediaType="application/json" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution>
			<ee:transform doc:name="Set Payload"
				doc:id="02220300-7917-467e-b5b3-187c38fb7325">
				<ee:message>
					<ee:set-payload><![CDATA[%dw 2.0
import * from dw::util::Values
output application/json
---
readUrl('classpath://api/examples/post-api_auth-request.json', 'application/json') update  "tenantId" with "png_ge"]]></ee:set-payload>
				</ee:message>
			</ee:transform>
			<flow-ref doc:name="Call to Auth Orchestrator Sub_Flow"
				doc:id="795e820e-9f9d-4521-bea9-44ec18f256c5"
				name="authOrchestratorSub_Flow" />
		</munit:execution>
		<munit:validation>
			<munit-tools:assert-that
				doc:name="Validate Payload"
				doc:id="a0fefa7d-82aa-4422-8ad1-de6dec319c14"
				is="#[%dw 2.0&#10;output application/json&#10;var expect = readUrl('classpath://api/examples/post-api_auth-response.json', 'application/json')&#10;---&#10;MunitTools::equalTo(expect)]"
				expression="#[payload]" />
		</munit:validation>
	</munit:test>
</mule>
