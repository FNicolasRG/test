# Build your Mule project and run tests with Apache Maven mule pulgin
# Pipeline Version v3
# Created on 06/21/2021
# Venukumar Bachuwala Rockwell Automation C4E MuleSoft Integration Team
# Note: Please avoid modifications to the pipleline, please contact C4E team for any build related issues
#

trigger:
  branches:
    include:
      - dev
      - qa      
  paths:
    exclude:
      - azure-pipelines.yml
      - pom.xml
pool:
  vmImage: 'ubuntu-latest'
variables:
- group: AzureDevops-Mule-CICD-Nonprod
- group: Maven-Cache-Variables
- group: RA-CloudHub-Deployment-Variables


stages:
  - stage: Build
    displayName: Build
    jobs:
      - job: Build
        steps:
        - task: DownloadSecureFile@1
          inputs:
            secureFile: 'settings.xml'
            retryCount: '2'        
        - task: Cache@2
          inputs:
            key: $(MAVEN_CACHE_KEY)
            restoreKeys: |
              maven | "$(Agent.OS)"
              maven
            path: $(MAVEN_CACHE_FOLDER)
          displayName: Cache Maven local repo
        - task: Maven@3
          name: Package
          inputs:
            mavenPomFile: 'pom.xml'
            mavenOptions: '-Xmx3072m'
            javaHomeOption: 'JDKVersion'
            jdkVersionOption: '1.8'
            jdkArchitectureOption: 'x64'
            goals: -B -e -V clean package
            options: -DskipTests $(MAVEN_OPTS) -s $(Agent.TempDirectory)/settings.xml
  - stage: vpcdev_mUnitTest
    displayName: vpcdev_mUnitTest
    condition: and(succeeded(), eq(variables['build.sourceBranch'], 'refs/heads/dev'))
    variables:
    - group: RA-CloudHub-vpcDev-Variables
    jobs:
      - job: vpcdev_mUnitTest
        steps:
        - task: DownloadSecureFile@1
          inputs:
            secureFile: 'settings.xml'
            retryCount: '2'
        - task: Cache@2
          inputs:
            key: $(MAVEN_CACHE_KEY)
            restoreKeys: |
              maven | "$(Agent.OS)"
              maven
            path: $(MAVEN_CACHE_FOLDER)
          displayName: Cache Maven local repo                
        - task: Maven@3
          name: MUnitTest
          inputs:
            mavenPomFile: 'pom.xml'
            mavenOptions: '-Xmx3072m'
            javaHomeOption: 'JDKVersion'
            jdkVersionOption: '1.8'
            jdkArchitectureOption: 'x64'
            publishJUnitResults: true
            testResultsFiles: '**/surefire-reports/TEST-*.xml'
            goals: clean test -Denv=$(env) -Dsecure.properties.key=$(secure.properties.key)
            options: $(MAVEN_OPTS) -s $(Agent.TempDirectory)/settings.xml
        - task: PublishCodeCoverageResults@1
          inputs:
            summaryFileLocation: '**/site/munit/coverage/summary.html'
            reportDirectory: '**/site/munit/coverage'
  - stage: vpcdev_Deployment
    displayName: vpcdev_Deployment
    condition: and(succeeded(), eq(variables['build.sourceBranch'], 'refs/heads/dev'))
    variables:
    - group: RA-CloudHub-vpcDev-Variables
    jobs:
      - job: vpcdev_Deployment
        steps:
        - task: DownloadSecureFile@1
          inputs:
            secureFile: 'settings.xml'
            retryCount: '2'        
        - task: Cache@2
          inputs:
            key: $(MAVEN_CACHE_KEY)
            restoreKeys: |
              maven | "$(Agent.OS)"
              maven
            path: $(MAVEN_CACHE_FOLDER)
          displayName: Cache Maven local repo
        - task: Maven@3
          name: Deployment
          inputs:
            mavenPomFile: 'pom.xml'
            mavenOptions: '-Xmx3072m'
            javaHomeOption: 'JDKVersion'
            jdkVersionOption: '1.8'
            jdkArchitectureOption: 'x64'
            goals: -B -e -V clean package deploy -DmuleDeploy
            options: -DskipTests $(MAVEN_OPTS) -s $(Agent.TempDirectory)/settings.xml -DmuleVersion=$(muleVersion) -Dusername=$(AzureDevopsMuleCICD-UserName) -Dpassword=$(AzureDevopsMuleCICD-Password) -DapplicationName=$(Build.Repository.Name)-$(env) -Denvironment=$(environment) -Dregion=$(region) -Dworkers=$(workers) -DworkerType=$(workerType) -Danypoint.platform.client_id=$(anypoint.platform.client_id) -Danypoint.platform.client_secret=$(anypoint.platform.client_secret) -Denv=$(env) -Dsecure.properties.key=$(secure.properties.key)
  - stage: vpcqa_mUnitTest
    displayName: vpcqa_mUnitTest
    condition: and(succeeded('Build'), eq(variables['build.sourceBranch'], 'refs/heads/qa'))
    variables:
    - group: RA-CloudHub-vpcQA-Variables
    jobs:
      - job: vpcqa_mUnitTest
        steps:
        - task: DownloadSecureFile@1
          inputs:
            secureFile: 'settings.xml'
            retryCount: '2'
        - task: Cache@2
          inputs:
            key: $(MAVEN_CACHE_KEY)
            restoreKeys: |
              maven | "$(Agent.OS)"
              maven
            path: $(MAVEN_CACHE_FOLDER)
          displayName: Cache Maven local repo                
        - task: Maven@3
          name: MUnitTest
          inputs:
            mavenPomFile: 'pom.xml'
            mavenOptions: '-Xmx3072m'
            javaHomeOption: 'JDKVersion'
            jdkVersionOption: '1.8'
            jdkArchitectureOption: 'x64'
            publishJUnitResults: true
            testResultsFiles: '**/surefire-reports/TEST-*.xml'
            goals: clean test -Denv=$(env) -Dsecure.properties.key=$(secure.properties.key)
            options: $(MAVEN_OPTS) -s $(Agent.TempDirectory)/settings.xml
        - task: PublishCodeCoverageResults@1
          inputs:
            summaryFileLocation: '**/site/munit/coverage/summary.html'
            reportDirectory: '**/site/munit/coverage'
  - stage: Release
    displayName: Release
    condition: and(succeeded('vpcqa_mUnitTest'), eq(variables['build.sourceBranch'], 'refs/heads/qa'))
    jobs:
      - job: Release
        variables:
        - group: RA-CloudHub-vpcQA-Variables
        steps:
        - task: Cache@2
          inputs:
            key: $(MAVEN_CACHE_KEY)
            restoreKeys: |
              maven | "$(Agent.OS)"
              maven
            path: $(MAVEN_CACHE_FOLDER)
          displayName: Cache Maven local repo        
        - task: DownloadSecureFile@1
          inputs:
            secureFile: 'settings.xml'
            retryCount: '2'
        - bash: |
            git config --global user.email $(git.user.name)
            git config --global user.name $(git.user.email)
            git checkout qa            
        - task: Maven@3
          name: PreparePerform
          inputs:
            mavenPomFile: 'pom.xml'
            mavenOptions: '-Xmx3072m'
            javaHomeOption: 'JDKVersion'
            jdkVersionOption: '1.8'
            jdkArchitectureOption: 'x64'
            goals: -U -V -B -e release:clean release:prepare release:perform
            options: $(MAVEN_OPTS) -s $(Agent.TempDirectory)/settings.xml -Dmaven.test.skip=true -DskipTests=true -Dmaven.javadoc.skip=true -Dmaven.source.skip=true -Denv=$(env) -Dsecure.properties.key=$(secure.properties.key)
  - stage: vpcqa_Deployment
    displayName: vpcqa_Deployment
    condition: and(succeeded('Release'), eq(variables['build.sourceBranch'], 'refs/heads/qa'))    
    variables:
    - group: RA-CloudHub-vpcQA-Variables
    jobs:      
      - deployment: vpcqa_Deployment
        displayName: vpcqa_Deployment
        environment: 'vpcQA'
        strategy:
            runOnce:
                deploy:
                    steps:
                    - task: DownloadSecureFile@1
                      displayName: 'Download secure file'
                      inputs:
                        secureFile: pom.xml                    
                    - task: DownloadPackage@1
                      inputs:
                        packageType: 'maven'
                        feed: 'ra-mule-releases'
                        definition: 'com.rockwellautomation:$(Build.Repository.Name)'
                        version: 'latest'
                        files: '*mule-application.jar'
                        downloadPath: '$(System.ArtifactsDirectory)'
                    - script: |
                        cd $(System.ArtifactsDirectory)
                        artifact=$(ls | grep *.jar)
                        echo "##vso[task.setvariable variable=ARTIFACT;]$artifact"
                      displayName: 'set artifact'                        
                    - task: DownloadSecureFile@1
                      inputs:
                        secureFile: 'settings.xml'
                        retryCount: '2'        
                    - task: Maven@3
                      name: Deployment
                      inputs:
                        mavenPomFile: '$(Agent.TempDirectory)/pom.xml'
                        mavenOptions: '-Xmx3072m'
                        javaHomeOption: 'JDKVersion'
                        jdkVersionOption: '1.8'
                        jdkArchitectureOption: 'x64'
                        goals: 'mule:deploy'
                        options: -DskipTests $(MAVEN_OPTS) -s $(Agent.TempDirectory)/settings.xml -Dmule.artifact=$(System.ArtifactsDirectory)/$(ARTIFACT) -DmuleVersion=$(muleVersion) -Dusername=$(AzureDevopsMuleCICD-UserName) -Dpassword=$(AzureDevopsMuleCICD-Password) -DapplicationName=$(Build.Repository.Name)-$(env) -Denvironment=$(environment) -Dregion=$(region) -Dworkers=$(workers) -DworkerType=$(workerType) -Danypoint.platform.client_id=$(anypoint.platform.client_id) -Danypoint.platform.client_secret=$(anypoint.platform.client_secret) -Denv=$(env) -Dsecure.properties.key=$(secure.properties.key)
                        publishJUnitResults: false